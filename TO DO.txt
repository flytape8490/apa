CHANGES SINCE COMMIT:
	started implementing help button.

TO DO: (order sort-of matters for coupled items)
: IMPLEMENT HELP BUTTON
	- notebook widget
	- style the text
	- primary info is where to get the values from
	- next is how to use the software
		- its own series of crap about the command schemes?
	- last what to do with the .apa after generation

: IMPLEMENT TEST BUTTON

: EDIT TAB BINDING TO SELECT THE WHOLE FIELD

: EDIT 'PRESS ENTER' AND 'PRESS TAB' BINDINGS TO WORK ON JUST THE FRAME, NOT FIELDS
	- have them call functions called /key/Key
	- check interactionMode and return break if not an appropriate mode
	- not as elegant but it uses fewer lines total than having a binding for each box

: ALL INSTANCES OF SELECTION CHANGES ARE REMOVED VIA '#.'
	- USE AND DETERMINE WHEN AND HOW RESELECTS SHOULD BE APPLIED
		* decided instances include (always update fields and scroll to selected):
			- item0 select after first populate
:ERROR: EDIT OR NEW, MAKE A CHANGE TO NAME AND THEN APPLY
	- ERROR OCCURS, no index to select or something like that
	- MAY ALSO NEGLECT TO LOCK FIELDS IN SOME INSTANCES
	- MAY OR MAY NOT HAVE SOMETHING TO DO WITH WHETHER OR NOT SOMETHING WAS SELECTED TO BEGINWITH

: FIX DUPLICATION ISSUES

: ADD A TEMPLATE COUNT - MAYBE RIGHT ABOVE THE SCROLLBAR?

: IN LISTBOX, PRESSING A LETTER SCROLL TO THE FIRST ENTRY STARTING WITH THAT LETTER?
	- might require a build of a lookup dict on namelist update
	
: UPPERCASE SORT ORDER FOR TEMPLATENAMEBOXREFRESH WORK W/ PYTHON3
	rumor has it that p3 doesn't like the lambda statement I use

: RETOOL INTERFACE
	- INCREASE CONTRAST ON LOCKED ITEMS
	- LEARN STYLING
	- CHANGE TEXT FIELDS TO ENTRY FIELDS
	- REMOVE SOME OF THE DIALOGS ON SAVE
	- PROGRESS BAR ON SAVE
	- WIDER TEXT FIELDS
	- COLUMN STICKYNESS FOR STRECHING
	- APPLY ELEMENT PADDING
	- ADD MENUBAR, ALLOW FOR ABOUT/HELP STUFF?
		- look into using the page tk builder thing
	- PERHAPS USE A PANED WINDOW
	- ADD ITEM PATH FIELD

: INSTEAD OF TRY/IoError FOR DETERMINING FILE PRESENCE WHY NOT JUST CHECK
	- Yes, do this: allows 2/3 compatibility w/o much trouble

: XML
	- SPLIT COMMENT INTO OWN SUB-ITEM, VALUE AS NON-ATTRIBUTE BUT TAGGEDTEXT
	- SPLIT PATH INTO OWN SUB-ITEM, VALUE AS NON-ATTRIBUTE BUT TAGGEDTEXT
	- OR JUST REPLACE WITH PICKLE? INVESTIGATE

: ON-EXIT SAVE

: RECHUNK AND COMMENT

MAYBE JUST RECODE THE WHOLE DAMNTHING - LEAVING BASIC READ-IN AND WRITE-OUT STRUCTURES
ENTER EDIT MODE AFTER YOU CLICK DUPLICATE?


FIND A BETTER WAY TO GET THE NAME OF THE SELECTION
	current is on line 99 - seems clunky
	can we get a better index retrieval method? maybe?

INVESTIGATE:
: REPLACE XML WITH PICKLE?
: COMPRESS THE OLD FOLDER?
: SET EVENT BINDINGS TO LAMBDA FN - WILL OMITTING THE #ARGS AS A RESULT BE A SAVINGS?
: REMOVE CANCEL BUTTON AND HAVE IT ONLY SHOW UP IN EDITMODE?
	bind to main window
	if interactionmode!=normal: cancel()
	else: return 'break'

FUTURE:
GENERALISE THE APPLICATION AWAY FROM JUST GEOMETRY
	ADD PAGE ASSIGNMENT FUNCTIONALITY
	MEANS UPDATING THE INTERFACE TO INCLUDE GEOM AND ASSIGN TICKBOXES.
		ERROR IF NEITHER IS SELECTED
	GIT BRANCH
		learn git